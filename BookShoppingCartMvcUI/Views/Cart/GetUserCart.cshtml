@model ShoppingCart
@{
    ViewData["Title"] = "GetUserCart";
}


<div style="width:90%;margin:auto" class="mt-2">
    @if (Model != null && Model.CartDetails != null && Model.CartDetails.Count > 0)
    {
        <h5>My Cart</h5>

        <table class="table table-striped">
            <tr>
                <th>Book</th>
                <th>Image</th>
                <th>Genre</th>
                <th>Unit Price(INR)</th>
                <th>Total Price</th>
                <th>Action</th>
            </tr>
            @foreach (var item in Model.CartDetails)
            {
                <tr>
                    <td>@item.Book.BookName</td>
                    <td>
                        @if (string.IsNullOrEmpty(item.Book.Image))
                        {
                            <img src="/images/NoImage.png" style="width:80px;height:100px" />
                        }
                        else
                        {
                            <img src="/images/@item.Book.Image" style="width:80px;height:100px" />
                        }
                    </td>
                    <td>@item.Book.Genre.GenreName</td>
                    <td>@item.Book.Price X @item.Quantity</td>
                    <td>@(item.Book.Price * item.Quantity)</td>
                    <td>
                        <select class="form-control quantity-selector" data-book-id="@item.BookId">
                            @for(int q=1;q<10;q++)
                            {
                              @if(item.Quantity==q)
                              {
                                <option selected value="@q">@q</option>
                              }
                              else
                              {
                                <option value="@q">@q</option>
                              }
                            }
                        </select>
                        @* Increase Quantity button should be invisible if not enough stock*@
                        @* @if (item.Quantity < item.Book.Stock.Quantity)
                        {
                            <a class="btn btn-info" href="/Cart/AddItem?bookId=@item.BookId&&redirect=1">+</a>
                        }
                        else
                        {
                            <span style="border: 1px solid;padding: 8px 8px;color: red;border-radius: 5px;margin-right:4px">Out of stock </span>
                        }
                        @* Decrement button *@
                        @*<a class="btn btn-info" href="/cart/removeitem?bookid=@item.BookId">-</a> *@
                    </td>
                </tr>
            }
        </table>

        <div class="my-2">
            <h5>Total(INR): </h5>
            @(Model.CartDetails.Select(item => item.Book.Price * item.Quantity).Sum())
        </div>

        <div class="my-2">
            <a class="btn btn-primary" href="/Cart/Checkout">Checkout</a>
        </div>

    }
    else
    {
        <h5>Cart is empty</h5>
    }
</div>

<script>
document.addEventListener('DOMContentLoaded', (event) => {
    const qtySelectors = document.querySelectorAll('.quantity-selector');
     qtySelectors.forEach(
            selectElement=>{
                console.log(selectElement);
                selectElement.addEventListener('change',function(){
                    let selectedQuantity=this.value;
                    let bookId=this.getAttribute('data-book-id');
                    if(selectedQuantity && bookId)
                    {
                      window.location.href=`/Cart/UpdateCartItem?bookId=${bookId}&qty=${selectedQuantity}`;
                    }
                })
            }
        )

    });
</script>